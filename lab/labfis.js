// Inicializa√ß√£o das part√≠culas f√≠sicas
document.addEventListener('DOMContentLoaded', () => {
    createPhysicsParticles();
    console.log('‚öõÔ∏è Laborat√≥rio de F√≠sica inicializado');
});

// Criar part√≠culas f√≠sicas animadas
function createPhysicsParticles() {
    const particlesContainer = document.getElementById('physicsParticles');
    const particleCount = 30;
    
    for (let i = 0; i < particleCount; i++) {
        const particle = document.createElement('div');
        particle.className = 'atom-particle';
        
        // Propriedades aleat√≥rias para cada part√≠cula
        const size = Math.random() * 6 + 4;
        const x = Math.random() * 100;
        const duration = Math.random() * 15 + 20;
        const delay = Math.random() * 5;
        
        // Cores aleat√≥rias baseadas no tema da f√≠sica
        const colors = ['#6a00ff', '#8b5cf6', '#a855f7', '#c084fc'];
        const color = colors[Math.floor(Math.random() * colors.length)];
        
        particle.style.cssText = `
            left: ${x}%;
            width: ${size}px;
            height: ${size}px;
            background: ${color};
            --duration: ${duration}s;
            animation-delay: ${delay}s;
        `;
        
        particlesContainer.appendChild(particle);
    }
}

// Dados das se√ß√µes do laborat√≥rio
const sections = {
    mechanics: {
        title: 'üöÄ Simula√ß√µes de Movimento e For√ßas',
        content: `
            <div style="padding: 20px;">
                <h3 style="color: #6a00ff; margin-bottom: 20px;">Laborat√≥rio de Mec√¢nica Cl√°ssica</h3>
                
                <div style="background: #16213e; padding: 20px; border-radius: 15px; margin-bottom: 20px;">
                    <h4 style="color: #ffffff; margin-bottom: 15px;">üéØ Movimento Retil√≠neo Uniformemente Variado</h4>
                    <p style="color: #cccccc; margin-bottom: 15px;">Equa√ß√£o: s = s‚ÇÄ + v‚ÇÄt + ¬Ωat¬≤</p>
                    <div style="display: flex; gap: 10px; margin-bottom: 15px;">
                        <input type="number" placeholder="Velocidade inicial (m/s)" id="v0" style="padding: 8px; border-radius: 5px; border: 1px solid #6a00ff; background: #0f0c29; color: white;">
                        <input type="number" placeholder="Acelera√ß√£o (m/s¬≤)" id="acceleration" style="padding: 8px; border-radius: 5px; border: 1px solid #6a00ff; background: #0f0c29; color: white;">
                        <input type="number" placeholder="Tempo (s)" id="time" style="padding: 8px; border-radius: 5px; border: 1px solid #6a00ff; background: #0f0c29; color: white;">
                    </div>
                    <button onclick="calculateMRUV()" style="background: #6a00ff; color: white; border: none; padding: 10px 20px; border-radius: 20px; cursor: pointer;">Calcular Posi√ß√£o</button>
                    <div id="mruv-result" style="margin-top: 15px; color: #00ffaa;"></div>
                </div>

                <div style="background: #16213e; padding: 20px; border-radius: 15px; margin-bottom: 20px;">
                    <h4 style="color: #ffffff; margin-bottom: 15px;">‚öñÔ∏è Segunda Lei de Newton</h4>
                    <p style="color: #cccccc; margin-bottom: 15px;">F = ma (For√ßa = massa √ó acelera√ß√£o)</p>
                    <div style="display: flex; gap: 10px; margin-bottom: 15px;">
                        <input type="number" placeholder="Massa (kg)" id="mass" style="padding: 8px; border-radius: 5px; border: 1px solid #6a00ff; background: #0f0c29; color: white;">
                        <input type="number" placeholder="Acelera√ß√£o (m/s¬≤)" id="acc-newton" style="padding: 8px; border-radius: 5px; border: 1px solid #6a00ff; background: #0f0c29; color: white;">
                    </div>
                    <button onclick="calculateNewton()" style="background: #6a00ff; color: white; border: none; padding: 10px 20px; border-radius: 20px; cursor: pointer;">Calcular For√ßa</button>
                    <div id="newton-result" style="margin-top: 15px; color: #00ffaa;"></div>
                </div>

                <div style="background: #16213e; padding: 20px; border-radius: 15px; margin-bottom: 20px;">
                    <h4 style="color: #ffffff; margin-bottom: 15px;">üé™ Movimento Circular Uniforme</h4>
                    <p style="color: #cccccc; margin-bottom: 15px;">Velocidade Angular: œâ = 2œÄ/T</p>
                    <div style="display: flex; gap: 10px; margin-bottom: 15px;">
                        <input type="number" placeholder="Raio (m)" id="radius" style="padding: 8px; border-radius: 5px; border: 1px solid #6a00ff; background: #0f0c29; color: white;">
                        <input type="number" placeholder="Per√≠odo (s)" id="period" style="padding: 8px; border-radius: 5px; border: 1px solid #6a00ff; background: #0f0c29; color: white;">
                    </div>
                    <button onclick="calculateCircular()" style="background: #6a00ff; color: white; border: none; padding: 10px 20px; border-radius: 20px; cursor: pointer;">Calcular Velocidade</button>
                    <div id="circular-result" style="margin-top: 15px; color: #00ffaa;"></div>
                </div>
            </div>
        `
    },
    electricity: {
        title: '‚ö° Experimentos com Eletricidade',
        content: `
            <div style="padding: 20px;">
                <h3 style="color: #6a00ff; margin-bottom: 20px;">Laborat√≥rio de Eletromagnetismo</h3>
                
                <div style="background: #16213e; padding: 20px; border-radius: 15px; margin-bottom: 20px;">
                    <h4 style="color: #ffffff; margin-bottom: 15px;">‚ö° Lei de Ohm</h4>
                    <p style="color: #cccccc; margin-bottom: 15px;">V = R √ó I (Tens√£o = Resist√™ncia √ó Corrente)</p>
                    <div style="display: flex; gap: 10px; margin-bottom: 15px;">
                        <input type="number" placeholder="Resist√™ncia (Œ©)" id="resistance" style="padding: 8px; border-radius: 5px; border: 1px solid #6a00ff; background: #0f0c29; color: white;">
                        <input type="number" placeholder="Corrente (A)" id="current" style="padding: 8px; border-radius: 5px; border: 1px solid #6a00ff; background: #0f0c29; color: white;">
                    </div>
                    <button onclick="calculateOhm()" style="background: #6a00ff; color: white; border: none; padding: 10px 20px; border-radius: 20px; cursor: pointer;">Calcular Tens√£o</button>
                    <div id="ohm-result" style="margin-top: 15px; color: #00ffaa;"></div>
                </div>

                <div style="background: #16213e; padding: 20px; border-radius: 15px; margin-bottom: 20px;">
                    <h4 style="color: #ffffff; margin-bottom: 15px;">üîã Pot√™ncia El√©trica</h4>
                    <p style="color: #cccccc; margin-bottom: 15px;">P = V √ó I (Pot√™ncia = Tens√£o √ó Corrente)</p>
                    <div style="display: flex; gap: 10px; margin-bottom: 15px;">
                        <input type="number" placeholder="Tens√£o (V)" id="voltage-power" style="padding: 8px; border-radius: 5px; border: 1px solid #6a00ff; background: #0f0c29; color: white;">
                        <input type="number" placeholder="Corrente (A)" id="current-power" style="padding: 8px; border-radius: 5px; border: 1px solid #6a00ff; background: #0f0c29; color: white;">
                    </div>
                    <button onclick="calculatePower()" style="background: #6a00ff; color: white; border: none; padding: 10px 20px; border-radius: 20px; cursor: pointer;">Calcular Pot√™ncia</button>
                    <div id="power-result" style="margin-top: 15px; color: #00ffaa;"></div>
                </div>

                <div style="background: #16213e; padding: 20px; border-radius: 15px; margin-bottom: 20px;">
                    <h4 style="color: #ffffff; margin-bottom: 15px;">üß≤ Campo Magn√©tico</h4>
                    <p style="color: #cccccc; margin-bottom: 15px;">F = q √ó v √ó B (For√ßa sobre carga em movimento)</p>
                    <div style="display: flex; gap: 10px; margin-bottom: 15px;">
                        <input type="number" placeholder="Carga (C)" id="charge" style="padding: 8px; border-radius: 5px; border: 1px solid #6a00ff; background: #0f0c29; color: white;">
                        <input type="number" placeholder="Velocidade (m/s)" id="velocity" style="padding: 8px; border-radius: 5px; border: 1px solid #6a00ff; background: #0f0c29; color: white;">
                        <input type="number" placeholder="Campo Magn√©tico (T)" id="magnetic-field" style="padding: 8px; border-radius: 5px; border: 1px solid #6a00ff; background: #0f0c29; color: white;">
                    </div>
                    <button onclick="calculateMagneticForce()" style="background: #6a00ff; color: white; border: none; padding: 10px 20px; border-radius: 20px; cursor: pointer;">Calcular For√ßa</button>
                    <div id="magnetic-result" style="margin-top: 15px; color: #00ffaa;"></div>
                </div>
            </div>
        `
    },
    optics: {
        title: 'üëÅÔ∏è √ìtica e Ondas',
        content: `
            <div style="padding: 20px;">
                <h3 style="color: #6a00ff; margin-bottom: 20px;">Laborat√≥rio de √ìtica</h3>
                
                <div style="background: #16213e; padding: 20px; border-radius: 15px; margin-bottom: 20px;">
                    <h4 style="color: #ffffff; margin-bottom: 15px;">üåä Equa√ß√£o das Ondas</h4>
                    <p style="color: #cccccc; margin-bottom: 15px;">v = Œª √ó f (Velocidade = Comprimento de onda √ó Frequ√™ncia)</p>
                    <div style="display: flex; gap: 10px; margin-bottom: 15px;">
                        <input type="number" placeholder="Comprimento de onda (m)" id="wavelength" style="padding: 8px; border-radius: 5px; border: 1px solid #6a00ff; background: #0f0c29; color: white;">
                        <input type="number" placeholder="Frequ√™ncia (Hz)" id="frequency" style="padding: 8px; border-radius: 5px; border: 1px solid #6a00ff; background: #0f0c29; color: white;">
                    </div>
                    <button onclick="calculateWaveSpeed()" style="background: #6a00ff; color: white; border: none; padding: 10px 20px; border-radius: 20px; cursor: pointer;">Calcular Velocidade</button>
                    <div id="wave-result" style="margin-top: 15px; color: #00ffaa;"></div>
                </div>

                <div style="background: #16213e; padding: 20px; border-radius: 15px; margin-bottom: 20px;">
                    <h4 style="color: #ffffff; margin-bottom: 15px;">üîç Lei de Snell (Refra√ß√£o)</h4>
                    <p style="color: #cccccc; margin-bottom: 15px;">n‚ÇÅ √ó sin(Œ∏‚ÇÅ) = n‚ÇÇ √ó sin(Œ∏‚ÇÇ)</p>
                    <div style="display: flex; gap: 10px; margin-bottom: 15px;">
                        <input type="number" placeholder="√çndice refra√ß√£o 1" id="n1" style="padding: 8px; border-radius: 5px; border: 1px solid #6a00ff; background: #0f0c29; color: white;">
                        <input type="number" placeholder="√Çngulo incid√™ncia (¬∞)" id="angle1" style="padding: 8px; border-radius: 5px; border: 1px solid #6a00ff; background: #0f0c29; color: white;">
                        <input type="number" placeholder="√çndice refra√ß√£o 2" id="n2" style="padding: 8px; border-radius: 5px; border: 1px solid #6a00ff; background: #0f0c29; color: white;">
                    </div>
                    <button onclick="calculateSnell()" style="background: #6a00ff; color: white; border: none; padding: 10px 20px; border-radius: 20px; cursor: pointer;">Calcular Refra√ß√£o</button>
                    <div id="snell-result" style="margin-top: 15px; color: #00ffaa;"></div>
                </div>

                <div style="background: #16213e; padding: 20px; border-radius: 15px; margin-bottom: 20px;">
                    <h4 style="color: #ffffff; margin-bottom: 15px;">üé® Energia do F√≥ton</h4>
                    <p style="color: #cccccc; margin-bottom: 15px;">E = h √ó f (Energia = Constante de Planck √ó Frequ√™ncia)</p>
                    <div style="display: flex; gap: 10px; margin-bottom: 15px;">
                        <input type="number" placeholder="Frequ√™ncia (Hz)" id="photon-freq" style="padding: 8px; border-radius: 5px; border: 1px solid #6a00ff; background: #0f0c29; color: white;">
                    </div>
                    <button onclick="calculatePhotonEnergy()" style="background: #6a00ff; color: white; border: none; padding: 10px 20px; border-radius: 20px; cursor: pointer;">Calcular Energia</button>
                    <div id="photon-result" style="margin-top: 15px; color: #00ffaa;"></div>
                </div>
            </div>
        `
    },
    quantum: {
        title: '‚öõÔ∏è F√≠sica Moderna e Qu√¢ntica',
        content: `
            <div style="padding: 20px;">
                <h3 style="color: #6a00ff; margin-bottom: 20px;">Laborat√≥rio Qu√¢ntico</h3>
                
                <div style="background: #16213e; padding: 20px; border-radius: 15px; margin-bottom: 20px;">
                    <h4 style="color: #ffffff; margin-bottom: 15px;">‚öõÔ∏è Energia de Ioniza√ß√£o do Hidrog√™nio</h4>
                    <p style="color: #cccccc; margin-bottom: 15px;">E = -13.6 eV / n¬≤ (Modelo de Bohr)</p>
                    <div style="display: flex; gap: 10px; margin-bottom: 15px;">
                        <input type="number" placeholder="N√∫mero qu√¢ntico n" id="quantum-n" style="padding: 8px; border-radius: 5px; border: 1px solid #6a00ff; background: #0f0c29; color: white;">
                    </div>
                    <button onclick="calculateHydrogenEnergy()" style="background: #6a00ff; color: white; border: none; padding: 10px 20px; border-radius: 20px; cursor: pointer;">Calcular Energia</button>
                    <div id="hydrogen-result" style="margin-top: 15px; color: #00ffaa;"></div>
                </div>

                <div style="background: #16213e; padding: 20px; border-radius: 15px; margin-bottom: 20px;">
                    <h4 style="color: #ffffff; margin-bottom: 15px;">üåä Comprimento de Onda de de Broglie</h4>
                    <p style="color: #cccccc; margin-bottom: 15px;">Œª = h / (m √ó v)</p>
                    <div style="display: flex; gap: 10px; margin-bottom: 15px;">
                        <input type="number" placeholder="Massa (kg)" id="de-broglie-mass" style="padding: 8px; border-radius: 5px; border: 1px solid #6a00ff; background: #0f0c29; color: white;">
                        <input type="number" placeholder="Velocidade (m/s)" id="de-broglie-vel" style="padding: 8px; border-radius: 5px; border: 1px solid #6a00ff; background: #0f0c29; color: white;">
                    </div>
                    <button onclick="calculateDeBroglie()" style="background: #6a00ff; color: white; border: none; padding: 10px 20px; border-radius: 20px; cursor: pointer;">Calcular Œª de Broglie</button>
                    <div id="debroglie-result" style="margin-top: 15px; color: #00ffaa;"></div>
                </div>

                <div style="background: #16213e; padding: 20px; border-radius: 15px; margin-bottom: 20px;">
                    <h4 style="color: #ffffff; margin-bottom: 15px;">‚è∞ Dilata√ß√£o do Tempo (Relatividade)</h4>
                    <p style="color: #cccccc; margin-bottom: 15px;">Œît' = Œît / ‚àö(1 - v¬≤/c¬≤)</p>
                    <div style="display: flex; gap: 10px; margin-bottom: 15px;">
                        <input type="number" placeholder="Tempo pr√≥prio (s)" id="proper-time" style="padding: 8px; border-radius: 5px; border: 1px solid #6a00ff; background: #0f0c29; color: white;">
                        <input type="number" placeholder="Velocidade (m/s)" id="relativistic-vel" style="padding: 8px; border-radius: 5px; border: 1px solid #6a00ff; background: #0f0c29; color: white;">
                    </div>
                    <button onclick="calculateTimeDilation()" style="background: #6a00ff; color: white; border: none; padding: 10px 20px; border-radius: 20px; cursor: pointer;">Calcular Dilata√ß√£o</button>
                    <div id="time-dilation-result" style="margin-top: 15px; color: #00ffaa;"></div>
                </div>
            </div>
        `
    }
};

// Fun√ß√£o para abrir se√ß√µes
function openSection(sectionKey) {
    const section = sections[sectionKey];
    if (!section) return;

    const modal = document.getElementById('sectionModal');
    const modalTitle = document.getElementById('modalTitle');
    const modalContent = document.getElementById('modalContent');

    modalTitle.textContent = section.title;
    modalContent.innerHTML = section.content;
    modal.style.display = 'flex';
}

// Fun√ß√£o para fechar modal
function closeModal() {
    const modal = document.getElementById('sectionModal');
    modal.style.display = 'none';
}

// Fun√ß√£o para iniciar simula√ß√µes
function startSimulation(type) {
    const notifications = {
        pendulum: 'üéØ Simula√ß√£o de P√™ndulo iniciada! Observe o movimento harm√¥nico simples.',
        projectile: 'üèπ Simula√ß√£o de Proj√©til ativada! Analise a trajet√≥ria parab√≥lica.',
        waves: 'üåä Simula√ß√£o de Ondas em execu√ß√£o! Veja a propaga√ß√£o ondulat√≥ria.',
        collision: 'üí• Simula√ß√£o de Colis√µes ativa! Estude a conserva√ß√£o do momentum.'
    };
    
    showNotification(notifications[type] || 'Simula√ß√£o iniciada!');
}

// Fun√ß√£o para mostrar notifica√ß√µes
function showNotification(message) {
    const notification = document.createElement('div');
    notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: var(--fundo-card);
        color: var(--texto);
        padding: 15px 20px;
        border-radius: 10px;
        border-left: 4px solid var(--physics-primary);
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
        z-index: 1000;
        max-width: 300px;
        transform: translateX(100%);
        transition: transform 0.3s ease;
    `;
    
    notification.innerHTML = `
        <div style="display: flex; align-items: center; gap: 10px;">
            <i class="fas fa-atom" style="color: var(--physics-primary);"></i>
            <span>${message}</span>
        </div>
    `;
    
    document.body.appendChild(notification);
    
    // Animar entrada
    setTimeout(() => {
        notification.style.transform = 'translateX(0)';
    }, 100);
    
    // Remover ap√≥s 3 segundos
    setTimeout(() => {
        notification.style.transform = 'translateX(100%)';
        setTimeout(() => {
            document.body.removeChild(notification);
        }, 300);
    }, 3000);
}

// FUN√á√ïES DE C√ÅLCULO F√çSICO

// Movimento Retil√≠neo Uniformemente Variado
function calculateMRUV() {
    const v0 = parseFloat(document.getElementById('v0').value) || 0;
    const a = parseFloat(document.getElementById('acceleration').value) || 0;
    const t = parseFloat(document.getElementById('time').value) || 0;
    
    const s = v0 * t + 0.5 * a * Math.pow(t, 2);
    const vf = v0 + a * t;
    
    document.getElementById('mruv-result').innerHTML = `
        <strong>Resultados:</strong><br>
        üìç Posi√ß√£o: ${s.toFixed(2)} metros<br>
        üèÉ Velocidade final: ${vf.toFixed(2)} m/s
    `;
}

// Segunda Lei de Newton
function calculateNewton() {
    const mass = parseFloat(document.getElementById('mass').value) || 0;
    const acc = parseFloat(document.getElementById('acc-newton').value) || 0;
    
    const force = mass * acc;
    
    document.getElementById('newton-result').innerHTML = `
        <strong>For√ßa resultante:</strong> ${force.toFixed(2)} N
    `;
}

// Movimento Circular Uniforme
function calculateCircular() {
    const radius = parseFloat(document.getElementById('radius').value) || 0;
    const period = parseFloat(document.getElementById('period').value) || 0;
    
    if (period === 0) {
        document.getElementById('circular-result').innerHTML = '‚ö†Ô∏è Per√≠odo n√£o pode ser zero!';
        return;
    }
    
    const omega = 2 * Math.PI / period;
    const velocity = omega * radius;
    
    document.getElementById('circular-result').innerHTML = `
        <strong>Resultados:</strong><br>
        üîÑ Velocidade angular: ${omega.toFixed(4)} rad/s<br>
        üèÉ Velocidade linear: ${velocity.toFixed(2)} m/s
    `;
}

// Lei de Ohm
function calculateOhm() {
    const resistance = parseFloat(document.getElementById('resistance').value) || 0;
    const current = parseFloat(document.getElementById('current').value) || 0;
    
    const voltage = resistance * current;
    
    document.getElementById('ohm-result').innerHTML = `
        <strong>Tens√£o:</strong> ${voltage.toFixed(2)} V
    `;
}

// Pot√™ncia El√©trica
function calculatePower() {
    const voltage = parseFloat(document.getElementById('voltage-power').value) || 0;
    const current = parseFloat(document.getElementById('current-power').value) || 0;
    
    const power = voltage * current;
    
    document.getElementById('power-result').innerHTML = `
        <strong>Pot√™ncia:</strong> ${power.toFixed(2)} W
    `;
}

// For√ßa Magn√©tica
function calculateMagneticForce() {
    const charge = parseFloat(document.getElementById('charge').value) || 0;
    const velocity = parseFloat(document.getElementById('velocity').value) || 0;
    const field = parseFloat(document.getElementById('magnetic-field').value) || 0;
    
    const force = charge * velocity * field;
    
    document.getElementById('magnetic-result').innerHTML = `
        <strong>For√ßa magn√©tica:</strong> ${force.toFixed(6)} N
    `;
}

// Velocidade das Ondas
function calculateWaveSpeed() {
    const wavelength = parseFloat(document.getElementById('wavelength').value) || 0;
    const frequency = parseFloat(document.getElementById('frequency').value) || 0;
    
    const speed = wavelength * frequency;
    
    document.getElementById('wave-result').innerHTML = `
        <strong>Velocidade da onda:</strong> ${speed.toFixed(2)} m/s
    `;
}

// Lei de Snell
function calculateSnell() {
    const n1 = parseFloat(document.getElementById('n1').value) || 0;
    const angle1 = parseFloat(document.getElementById('angle1').value) || 0;
    const n2 = parseFloat(document.getElementById('n2').value) || 0;
    
    const angle1Rad = angle1 * Math.PI / 180;
    const sin2 = (n1 * Math.sin(angle1Rad)) / n2;
    
    if (Math.abs(sin2) > 1) {
        document.getElementById('snell-result').innerHTML = '‚ö†Ô∏è Reflex√£o total interna!';
        return;
    }
    
    const angle2 = Math.asin(sin2) * 180 / Math.PI;
    
    document.getElementById('snell-result').innerHTML = `
        <strong>√Çngulo de refra√ß√£o:</strong> ${angle2.toFixed(2)}¬∞
    `;
}

// Energia do F√≥ton
function calculatePhotonEnergy() {
    const frequency = parseFloat(document.getElementById('photon-freq').value) || 0;
    const h = 6.626e-34; // Constante de Planck
    
    const energy = h * frequency;
    
    document.getElementById('photon-result').innerHTML = `
        <strong>Energia do f√≥ton:</strong> ${energy.toExponential(3)} J
    `;
}

// Energia do Hidrog√™nio (Modelo de Bohr)
function calculateHydrogenEnergy() {
    const n = parseFloat(document.getElementById('quantum-n').value) || 1;
    
    if (n < 1) {
        document.getElementById('hydrogen-result').innerHTML = '‚ö†Ô∏è n deve ser ‚â• 1!';
        return;
    }
    
    const energy = -13.6 / Math.pow(n, 2);
    
    document.getElementById('hydrogen-result').innerHTML = `
        <strong>Energia do n√≠vel n=${n}:</strong> ${energy.toFixed(3)} eV
    `;
}

// Comprimento de Onda de de Broglie
function calculateDeBroglie() {
    const mass = parseFloat(document.getElementById('de-broglie-mass').value) || 0;
    const velocity = parseFloat(document.getElementById('de-broglie-vel').value) || 0;
    const h = 6.626e-34; // Constante de Planck
    
    if (mass === 0 || velocity === 0) {
        document.getElementById('debroglie-result').innerHTML = '‚ö†Ô∏è Massa e velocidade devem ser > 0!';
        return;
    }
    
    const wavelength = h / (mass * velocity);
    
    document.getElementById('debroglie-result').innerHTML = `
        <strong>Comprimento de onda de de Broglie:</strong> ${wavelength.toExponential(3)} m
    `;
}

// Dilata√ß√£o do Tempo (Relatividade)
function calculateTimeDilation() {
    const properTime = parseFloat(document.getElementById('proper-time').value) || 0;
    const velocity = parseFloat(document.getElementById('relativistic-vel').value) || 0;
    const c = 299792458; // Velocidade da luz
    
    if (velocity >= c) {
        document.getElementById('time-dilation-result').innerHTML = '‚ö†Ô∏è Velocidade deve ser < c!';
        return;
    }
    
    const gamma = 1 / Math.sqrt(1 - Math.pow(velocity / c, 2));
    const dilatedTime = properTime * gamma;
    
    document.getElementById('time-dilation-result').innerHTML = `
        <strong>Resultados:</strong><br>
        ‚è∞ Tempo dilatado: ${dilatedTime.toFixed(6)} s<br>
        üìä Fator Œ≥: ${gamma.toFixed(6)}
    `;
}

// Fechar modal ao clicar fora
window.onclick = function(event) {
    const modal = document.getElementById('sectionModal');
    if (event.target === modal) {
        closeModal();
    }
}

// Simular atividade do laborat√≥rio
setInterval(() => {
    const activities = [
        '‚öõÔ∏è Experimento qu√¢ntico detectou nova part√≠cula',
        '‚ö° Campo magn√©tico de 0.5T estabilizado',
        'üåä Interfer√™ncia construtiva observada',
        'üöÄ Acelera√ß√£o gravitacional medida: 9.81 m/s¬≤'
    ];
    
    const randomActivity = activities[Math.floor(Math.random() * activities.length)];
    
    // Chance de 20% de mostrar notifica√ß√£o
    if (Math.random() < 0.2) {
        showNotification(randomActivity);
    }
}, 8000); // A cada 8 segundos